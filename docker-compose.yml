version: '3.8'

services:
  # Node.js API Service
  api:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: chatbot-api
    restart: unless-stopped
    env_file:
      - .env.production
    environment:
      - NODE_ENV=production
      - PORT=3001
    networks:
      - chatbot-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    volumes:
      - ./logs:/app/logs
    depends_on:
      - nginx

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: chatbot-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/sites-available:/etc/nginx/sites-available:ro
      - ./nginx/sites-enabled:/etc/nginx/sites-enabled:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - ./logs/nginx:/var/log/nginx
      - certbot_data:/var/www/certbot
      - certbot_certs:/etc/letsencrypt
    networks:
      - chatbot-network
    command: ['nginx', '-g', 'daemon off;']

  # Certbot for SSL certificates
  certbot:
    image: certbot/certbot
    container_name: chatbot-certbot
    volumes:
      - certbot_data:/var/www/certbot
      - certbot_certs:/etc/letsencrypt
    command: certonly --webroot --webroot-path=/var/www/certbot --email seu-email@dominio.com --agree-tos --no-eff-email -d seu-dominio.com
    depends_on:
      - nginx

networks:
  chatbot-network:
    driver: bridge

volumes:
  certbot_data:
  certbot_certs: